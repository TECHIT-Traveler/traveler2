spring:
  profiles:
    active: dev
    include: secret
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  threads:
    virtual:
      enabled: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  springdoc:
    default-consumes-media-type: application/json
    default-produces-media-type: application/json
    swagger-ui:
      path: /swagger-ui.html
      disable-swagger-default-url: true
      display-query-params-without-oauth2: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/traveler2
    username: root
    password: lldj123414
#  sql:
#    init:
#      mode: always
#      continue-on-error: true
#      data-locations: classpath:sql/data.sql
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        naming:
          physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        default_batch_fetch_size: 100
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
    database-platform: org.hibernate.dialect.MySQLDialect
    defer-datasource-initialization: true
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: NEED_TO_INPUT_ON_SECRET
            client-secret: NEED_TO_INPUT_ON_SECRET
            scope:
              - profile
              - email
            redirect-uri: http://localhost:8090/login/oauth2/code/google
          naver:
            clientId: NEED_TO_INPUT_ON_SECRET
            client-secret: NEED_TO_INPUT_ON_SECRET
            scope:
              - name
              - email
            client-name: Naver # 대문자로 적음
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8090/login/oauth2/code/naver
        provider:

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

    jwt:
      secretKey: ON_SECRET
    accessToken:
      expirationSec: '#{60*60}'
    temp:
      dirPath: c:/temp/traveler2_dev/temp
    genFile:
      dirPath: c:/temp/traveler2_dev
    api:
      serviceKey: ON_SECRET
    logging:
      level:
        root: info
#  logging:
#    level:
#      com.ll.eitcharge: DEBUG
#      org.hibernate.SQL: DEBUG
#      org.hibernate.orm.jdbc.bind: TRACE
#      org.hibernate.orm.jdbc.extract: TRACE
#      org.springframework.transaction.interceptor: TRACE
#  custom:
#    dev:
#      cookieDomain: localhost
#      frontUrl: "http://${custom.dev.cookieDomain}:5173"
#      backUrl: "http://${custom.dev.cookieDomain}:${server.port}"
#    prod:
#      cookieDomain: www.caaano.site
#      frontUrl: "https://${custom.prod.cookieDomain}"
#      backUrl: "https://api.${custom.prod.cookieDomain}"
#    site:
#      cookieDomain: "${custom.dev.cookieDomain}"
#      frontUrl: "${custom.dev.frontUrl}"
#      backUrl: "${custom.dev.backUrl}"
#      name: traveler